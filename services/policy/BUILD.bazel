load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")

proto_library(
    name = "policy_proto",
    srcs = ["policy.proto"],
    visibility = ["//visibility:public"],
    deps = [
        "//services/domotics/bridge:bridge_proto",
        "//services/mind:mind_proto",
        "@com_google_protobuf//:any_proto",
        "@com_google_protobuf//:timestamp_proto",
    ],
)

go_proto_library(
    name = "policy_go_proto",
    importpath = "github.com/rmrobinson/nerves/services/policy",
    proto = ":policy_proto",
    visibility = ["//visibility:public"],
    deps = [
        "//services/domotics/bridge:go_default_library",
        "//services/mind:go_default_library",
    ],
)

go_library(
    name = "go_default_library",
    srcs = [
        "condition.go",
        "engine.go",
        "state.go",
    ],
    embed = [":policy_go_proto"],
    importpath = "github.com/rmrobinson/nerves/services/policy",
    visibility = ["//visibility:public"],
    deps = [
        "//services/domotics/bridge:go_default_library",
        "//services/weather:go_default_library",
        "//vendor/github.com/robfig/cron:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["condition_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//services/domotics/bridge:go_default_library",
        "//services/weather:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
        "//vendor/go.uber.org/zap/zaptest:go_default_library",
    ],
)
